{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "title": "TIGA NOTE", "subTitle": "Tiga\u7684\u4e2a\u4eba\u7b14\u8bb0\uff0c\u5206\u4eab\u8bb0\u5f55\u4e00\u4e9b\u6709\u8da3\u597d\u73a9\u7684\u6280\u672f", "avatarUrl": "https://avatars.githubusercontent.com/u/10243912?v=4", "GMEEK_VERSION": "last", "postListJson": {"P6": {"htmlDir": "docs/post/Caddy-kua-yu-fang-wen-pei-zhi.html", "labels": ["\u8fd0\u7ef4"], "postTitle": "Caddy\u8de8\u57df\u8bbf\u95ee\u914d\u7f6e", "postUrl": "post/Caddy-kua-yu-fang-wen-pei-zhi.html", "postSourceUrl": "https://github.com/tiga210/tiga210.github.io/issues/6", "commentNum": 0, "wordCount": 831, "description": "```\r\nkuayu.tiga210.eu.org {\r\n        header {\r\n                Access-Control-Allow-Origin *\r\n                Access-Control-Allow-Methods 'GET, POST, OPTIONS'\r\n                Access-Control-Allow-Headers 'Content-Type, Authorization'\r\n                Access-Control-Allow-Credentials true\r\n        }\r\n\r\n        # \u5904\u7406 OPTIONS \u9884\u68c0\u8bf7\u6c42\r\n        @preflight {\r\n                method OPTIONS\r\n        }\r\n        handle @preflight {\r\n                respond 'OK' 204\r\n        }\r\n\r\n        # \u53cd\u5411\u4ee3\u7406\u8bbe\u7f6e\r\n        reverse_proxy /* tg03:8080 {\r\n                header_up Access-Control-Allow-Origin *\r\n                header_up Access-Control-Allow-Methods 'GET, POST, OPTIONS'\r\n                header_up Access-Control-Allow-Headers 'Content-Type, Authorization'\r\n                header_up Access-Control-Allow-Credentials true\r\n        }\r\n}\r\n```\u3002", "top": 0, "createdAt": 1718862422, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/10243912?v=4", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P7": {"htmlDir": "docs/post/shi-yong-Cloudflare-dai-li-Docker hub.html", "labels": ["\u8fd0\u7ef4"], "postTitle": "\u4f7f\u7528Cloudflare\u4ee3\u7406Docker hub", "postUrl": "post/shi-yong-Cloudflare-dai-li-Docker%20hub.html", "postSourceUrl": "https://github.com/tiga210/tiga210.github.io/issues/7", "commentNum": 0, "wordCount": 5963, "description": "\u7531\u4e8e\u56fd\u5185\u7684\u4e00\u4e9bdockerhub\u955c\u50cf\u4e0b\u7ebf\uff0c\u5bfc\u81f4\u65e0\u6cd5\u8bbf\u95ee\uff0c\u53c2\u8003 [https://global.v2ex.com/t/1007922](https://global.v2ex.com/t/1007922) \u6210\u529f\u4f7f\u7528cloudflare\u8fdb\u884c\u4ee3\u7406\r\n\r\n\r\n```js\r\n'use strict'\r\nconst workers_url = 'https://\u4f60\u81ea\u5df1\u7684\u57df\u540d'\r\nconst hub_host = 'registry-1.docker.io'\r\nconst auth_url = 'https://auth.docker.io'\r\n\r\n/**\r\n * static files (404.html, sw.js, conf.js)\r\n */\r\n\r\n/** @type {RequestInit} */\r\nconst PREFLIGHT_INIT = {\r\n// status: 204,\r\n    headers: new Headers({\r\n        'access-control-allow-origin': '*',\r\n        'access-control-allow-methods': 'GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS',\r\n        'access-control-max-age': '1728000',\r\n    }),\r\n}\r\n\r\n/**\r\n * @param {any} body\r\n * @param {number} status\r\n * @param {Object<string, string>} headers\r\n */\r\nfunction makeRes(body, status = 200, headers = {}) {\r\n    headers['access-control-allow-origin'] = '*'\r\n    return new Response(body, {status, headers})\r\n}\r\n\r\n\r\n/**\r\n * @param {string} urlStr\r\n */\r\nfunction newUrl(urlStr) {\r\n    try {\r\n        return new URL(urlStr)\r\n    } catch (err) {\r\n        return null\r\n    }\r\n}\r\n\r\n\r\naddEventListener('fetch', e => {\r\n    const ret = fetchHandler(e)\r\n        .catch(err => makeRes('cfworker error:\\n' + err.stack, 502))\r\n    e.respondWith(ret)\r\n})\r\n\r\n\r\n/**\r\n * @param {FetchEvent} e\r\n */\r\nasync function fetchHandler(e) {\r\n    const getReqHeader = (key) => e.request.headers.get(key);\r\n\r\n    let url = new URL(e.request.url);\r\n\r\n    // \u4fee\u6539 pre head get \u8bf7\u6c42\r\n    // \u662f\u5426\u542b\u6709 %2F \uff0c\u7528\u4e8e\u5224\u65ad\u662f\u5426\u5177\u6709\u7528\u6237\u540d\u4e0e\u4ed3\u5e93\u540d\u4e4b\u95f4\u7684\u8fde\u63a5\u7b26\r\n    // \u540c\u65f6\u68c0\u67e5 %3A \u7684\u5b58\u5728\r\n    if (!/%2F/.test(url.search) && /%3A/.test(url.toString())) {\r\n        let modifiedUrl = url.toString().replace(/%3A(?=.*?&)/, '%3Alibrary%2F');\r\n        url = new URL(modifiedUrl);\r\n        console.log(`handle_url: ${url}`)\r\n    }\r\n\r\n    if (url.pathname === '/token') {\r\n        let token_parameter = {\r\n            headers: {\r\n                'Host': 'auth.docker.io',\r\n                'User-Agent': getReqHeader('User-Agent'),\r\n                'Accept': getReqHeader('Accept'),\r\n                'Accept-Language': getReqHeader('Accept-Language'),\r\n                'Accept-Encoding': getReqHeader('Accept-Encoding'),\r\n                'Connection': 'keep-alive',\r\n                'Cache-Control': 'max-age=0'\r\n            }\r\n        };\r\n        let token_url = auth_url + url.pathname + url.search\r\n        return fetch(new Request(token_url, e.request), token_parameter)\r\n    }\r\n\r\n// \u4fee\u6539 head \u8bf7\u6c42\r\n    if (/^\\/v2\\/[^/]+\\/[^/]+\\/[^/]+$/.test(url.pathname) && !/^\\/v2\\/library/.test(url.pathname)) {\r\n        url.pathname = url.pathname.replace(/\\/v2\\//, '/v2/library/');\r\n        console.log(`modified_url: ${url.pathname}`)\r\n    }\r\n\r\n    url.hostname = hub_host;\r\n\r\n    let parameter = {\r\n        headers: {\r\n            'Host': hub_host,\r\n            'User-Agent': getReqHeader('User-Agent'),\r\n            'Accept': getReqHeader('Accept'),\r\n            'Accept-Language': getReqHeader('Accept-Language'),\r\n            'Accept-Encoding': getReqHeader('Accept-Encoding'),\r\n            'Connection': 'keep-alive',\r\n            'Cache-Control': 'max-age=0'\r\n        },\r\n        cacheTtl: 3600\r\n    };\r\n\r\n    if (e.request.headers.has('Authorization')) {\r\n        parameter.headers.Authorization = getReqHeader('Authorization');\r\n    }\r\n\r\n    let original_response = await fetch(new Request(url, e.request), parameter)\r\n    let original_response_clone = original_response.clone();\r\n    let original_text = original_response_clone.body;\r\n    let response_headers = original_response.headers;\r\n    let new_response_headers = new Headers(response_headers);\r\n    let status = original_response.status;\r\n\r\n    if (new_response_headers.get('Www-Authenticate')) {\r\n        let auth = new_response_headers.get('Www-Authenticate');\r\n        let re = new RegExp(auth_url, 'g');\r\n        new_response_headers.set('Www-Authenticate', response_headers.get('Www-Authenticate').replace(re, workers_url));\r\n    }\r\n\r\n    if (new_response_headers.get('Location')) {\r\n        return httpHandler(e.request, new_response_headers.get('Location'))\r\n    }\r\n\r\n    let response = new Response(original_text, {\r\n        status,\r\n        headers: new_response_headers\r\n    })\r\n    return response;\r\n\r\n}\r\n\r\n\r\n/**\r\n * @param {Request} req\r\n * @param {string} pathname\r\n */\r\nfunction httpHandler(req, pathname) {\r\n    const reqHdrRaw = req.headers\r\n\r\n    // preflight\r\n    if (req.method === 'OPTIONS' &&\r\n        reqHdrRaw.has('access-control-request-headers')\r\n    ) {\r\n        return new Response(null, PREFLIGHT_INIT)\r\n    }\r\n\r\n    let rawLen = ''\r\n\r\n    const reqHdrNew = new Headers(reqHdrRaw)\r\n\r\n    const refer = reqHdrNew.get('referer')\r\n\r\n    let urlStr = pathname\r\n\r\n    const urlObj = newUrl(urlStr)\r\n\r\n    /** @type {RequestInit} */\r\n    const reqInit = {\r\n        method: req.method,\r\n        headers: reqHdrNew,\r\n        redirect: 'follow',\r\n        body: req.body\r\n    }\r\n    return proxy(urlObj, reqInit, rawLen)\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param {URL} urlObj\r\n * @param {RequestInit} reqInit\r\n */\r\nasync function proxy(urlObj, reqInit, rawLen) {\r\n    const res = await fetch(urlObj.href, reqInit)\r\n    const resHdrOld = res.headers\r\n    const resHdrNew = new Headers(resHdrOld)\r\n\r\n    // verify\r\n    if (rawLen) {\r\n        const newLen = resHdrOld.get('content-length') || ''\r\n        const badLen = (rawLen !== newLen)\r\n\r\n        if (badLen) {\r\n            return makeRes(res.body, 400, {\r\n                '--error': `bad len: ${newLen}, except: ${rawLen}`,\r\n                'access-control-expose-headers': '--error',\r\n            })\r\n        }\r\n    }\r\n    const status = res.status\r\n    resHdrNew.set('access-control-expose-headers', '*')\r\n    resHdrNew.set('access-control-allow-origin', '*')\r\n    resHdrNew.set('Cache-Control', 'max-age=1500')\r\n\r\n    resHdrNew.delete('content-security-policy')\r\n    resHdrNew.delete('content-security-policy-report-only')\r\n    resHdrNew.delete('clear-site-data')\r\n\r\n    return new Response(res.body, {\r\n        status,\r\n        headers: resHdrNew\r\n    })\r\n}\r\n\r\n```\u3002", "top": 0, "createdAt": 1718889858, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/10243912?v=4", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}, "P8": {"htmlDir": "docs/post/ce-shi-bo-ke.html", "labels": ["\u968f\u7b14"], "postTitle": "\u6d4b\u8bd5\u535a\u5ba2", "postUrl": "post/ce-shi-bo-ke.html", "postSourceUrl": "https://github.com/tiga210/tiga210.github.io/issues/8", "commentNum": 2, "wordCount": 119, "description": "# \u6d4b\u8bd5\u535a\u5ba2\n\n\u6d4b\u8bd5\u535a\u5ba2\u3002", "top": 0, "createdAt": 1718890149, "style": "", "script": "", "ogImage": "https://avatars.githubusercontent.com/u/10243912?v=4", "createdDate": "2024-06-20", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"tag1": "#FF3B3B", "tag10": "#B22DFB", "tag11": "#6DC8EC", "tag2": "#EF7F92", "tag3": "#53C117", "tag4": "#a0d911", "tag5": "#fadb14", "tag7": "#13c2c2", "tag8": "#FF6D73", "\u8fd0\u7ef4": "#fa8c16", "\u968f\u7b14": "#1890ff"}, "displayTitle": "TIGA NOTE", "faviconUrl": "https://avatars.githubusercontent.com/u/10243912?v=4", "ogImage": "https://avatars.githubusercontent.com/u/10243912?v=4", "homeUrl": "https://tiga210.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}